[alias]
	hist = log --all --graph --decorate --oneline
	co = checkout
	d = diff
	ds = diff --stat
	
	# Logging aliases:
	l = log --graph --date=format:%c --pretty=format:'%C(auto)%h%d %s  %C(green)%an, %ar %C(cyan)(%ad) %C(auto)'
	la = log --graph --date=format:%c --pretty=format:'%C(auto)%h%d %s  %C(green)%an, %ar %C(cyan)(%ad) %C(auto)' --all
	ls = log --graph --date=format:%c --pretty=format:'%C(auto)%h%d %s  %C(green)%an, %ar %C(cyan)(%ad) %C(auto)' --simplify-by-decoration
	las = log --graph --date=format:%c --pretty=format:'%C(auto)%h%d %s  %C(green)%an, %ar %C(cyan)(%ad) %C(auto)' --all --simplify-by-decoration
	
	# Version aliases:
	vrm = "! \
	      git fetch; \
	      git describe --abbrev=0 origin/master;"
	
	# Branch aliases:
	vv = branch -vv
	cleanup = !git co master | git branch -vv | grep ': gone]' | awk '{print $1}' | xargs -n 1 git branch -D
	
	# Update all behind branches
	update = "! \
           CURRENT_BRANCH=`git current-branch`; \
           echo \"Current branch is $CURRENT_BRANCH\"; \
           git co -b dummy_branch; \
           for branch in `git branch -vv | egrep ': behind \\d*\\]' | awk '{print $1}'`; \
           do \
              git checkout $branch; \
              git merge --ff-only origin/$branch; \
           done; \
           git checkout $CURRENT_BRANCH; \
           git branch -d dummy_branch;"
	
	# Other useful aliases:
	unstage = reset HEAD
	staged = diff --cached
	unstaged = diff
	current-branch = !git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||'
[apply]
	whitespace = warn
[clean]
	requireForce = false
[color]
	ui = auto
[color "diff"]
	meta = cyan bold
	frag = magenta bold
[color "status"]
	added = green
	changed = yellow
	untracked = red
[core]
	editor = mate -w
	excludesfile = /Users/ryan.watkins/.gitignore_global
	autocrlf = input
	excludesfiles = /Users/ryan.watkins/.gitignore_global
[credential]
	helper = osxkeychain
[diff]
	tool = bcomp
[difftool]
	prompt = false
[difftool "bcomp"]
	trustExitCode = true
	cmd = "/usr/local/bin/bcomp" "$LOCAL" "$REMOTE"
[fetch]
	prune = true
[help]
	autocorrect = -1
[init]
	templatedir = ~/.git_template
[log]
	decorate = short
[merge]
	tool = bcomp
[mergetool]
	prompt = false
[mergetool "bcomp"]
	trustExitCode = true
	cmd = "/usr/local/bin/bcomp" "$LOCAL" "$REMOTE" "$BASE" "$MERGED"
[pull]
	ff = only
[push]
	default = simple
[remote "origin"]
	push = HEAD
[status]
	submodule = 1
[user]
	email = ryan.watkins@keap.com
	name = Ryan Watkins
[filter "media"]
	clean = git-media-clean %f
	smudge = git-media-smudge %f
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
